// Generated by view binder compiler. Do not edit!
package com.example.ai_customizing.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ai_customizing.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ServerMainActivityBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button Loginbutton;

  @NonNull
  public final Button MainButton;

  @NonNull
  public final EditText emailEditText;

  @NonNull
  public final EditText passEditText;

  @NonNull
  public final Button registerButton;

  private ServerMainActivityBinding(@NonNull LinearLayout rootView, @NonNull Button Loginbutton,
      @NonNull Button MainButton, @NonNull EditText emailEditText, @NonNull EditText passEditText,
      @NonNull Button registerButton) {
    this.rootView = rootView;
    this.Loginbutton = Loginbutton;
    this.MainButton = MainButton;
    this.emailEditText = emailEditText;
    this.passEditText = passEditText;
    this.registerButton = registerButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ServerMainActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ServerMainActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.server_main_activity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ServerMainActivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Loginbutton;
      Button Loginbutton = ViewBindings.findChildViewById(rootView, id);
      if (Loginbutton == null) {
        break missingId;
      }

      id = R.id.MainButton;
      Button MainButton = ViewBindings.findChildViewById(rootView, id);
      if (MainButton == null) {
        break missingId;
      }

      id = R.id.emailEditText;
      EditText emailEditText = ViewBindings.findChildViewById(rootView, id);
      if (emailEditText == null) {
        break missingId;
      }

      id = R.id.passEditText;
      EditText passEditText = ViewBindings.findChildViewById(rootView, id);
      if (passEditText == null) {
        break missingId;
      }

      id = R.id.registerButton;
      Button registerButton = ViewBindings.findChildViewById(rootView, id);
      if (registerButton == null) {
        break missingId;
      }

      return new ServerMainActivityBinding((LinearLayout) rootView, Loginbutton, MainButton,
          emailEditText, passEditText, registerButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
